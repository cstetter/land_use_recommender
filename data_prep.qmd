---
title: "Land use recommender"
author: "Christian Stetter"
format: html
editor: visual
---

# 1. Load libraries

```{r load libraries, include=FALSE}
library(support.CEs)
library(survival)
library(data.table)
library(mlogit)
library(broom)
library(tidyverse)
library(rgdal)
library(sf)
```

# 3. Descriptive Statistics

```{r}
#### Load shape data ####
shape <- sf::st_read("plz_spatial/plz-3stellig.shp")

## subset only relevant zip codes
shape <- shape[startsWith(shape$plz, "63") | 
                startsWith(shape$plz, "8") | 
                startsWith(shape$plz, "9"),]

shape5 <- sf::st_read("plz_spatial/plz-gebiete.shp")
shape5 <- shape5[ which(shape5$plz %in% 
                          dat$location[which(nchar(dat$location)==5)]),]

shape5$note <- NULL
shapeAll <- rbind(shape, shape5)

shapeAll <- shapeAll %>% 
 group_by(plz) %>%
 summarise(geometry = sf::st_union(geometry)) %>%
 ungroup()

a <- st_centroid(shapeAll)

new <- table(dat$zip) %>% as.data.frame %>% rename(plz=Var1)
b <- left_join(new, a)
test <- left_join(shapeAll, b, by="plz")

a <- st_centroid(shapeAll)

new <- table(dat$zip) %>% as.data.frame %>% rename(plz=Var1)
b <- left_join(new, a)
test <- left_join(shapeAll, b, by="plz")

BYshape <- sf::st_read("BYshape/bayern_ex.shp")[,"SCH"]
BYshape <- st_transform(BYshape, st_crs(shapeAll))
BYshapeRB <- sf::st_read("BYshape/regbez_ex.shp")[,"SCH"]
BYshapeRB <- st_transform(BYshapeRB, st_crs(shapeAll))

shapeAll <- st_intersection(shapeAll, BYshape)

shapeAllRB <- st_join(shapeAll, BYshapeRB, join = st_intersects,
                    largest=T) %>%
  mutate(SCH = SCH.y) %>%
  select(plz, SCH)

shapeAll_multi <- st_join(shapeAll, BYshapeRB, join = st_intersects)

colnames(shapeAll_multi)[1] <- colnames(shapeAllRB)[1] <- "zip"

dat <- left_join(dat, shapeAllRB, by="zip") 

dat <- filter(dat, !is.na(SCH))
dat_sim_multi <- left_join(dat, shapeAll_multi, by="zip")

b <- b[b$plz %in% dat$zip,]
gg_sample_spatial <- ggplot(data = BYshape) +
    geom_sf(color = gray(.5), alpha=0.2) +
 geom_point(data = b, color="red", alpha = .5,
            aes(size = Freq, geometry = geometry),
            stat = "sf_coordinates") +
 scale_size_continuous(range = c(1, 3), breaks = c(1,3,5,7)) +
 theme(panel.grid = element_blank(), 
       axis.title = element_blank(),
       axis.text = element_blank(),
       axis.ticks = element_blank(),
       panel.background = element_blank(),
       panel.border = element_rect(colour = "black", fill=NA),
       legend.position=c(.9,.8))
```
